<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="shmclient_8hpp" kind="file">
    <compoundname>shmclient.hpp</compoundname>
    <includes local="no">boost/interprocess/managed_shared_memory.hpp</includes>
    <includes local="no">boost/interprocess/allocators/allocator.hpp</includes>
    <includes local="no">boost/interprocess/containers/map.hpp</includes>
    <includes local="no">boost/interprocess/containers/vector.hpp</includes>
    <includes local="no">boost/interprocess/containers/string.hpp</includes>
    <includes refid="smartcity_8hpp" local="no">smartcity.hpp</includes>
    <includes refid="car_8hpp" local="no">car.hpp</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">iterator</includes>
    <includes local="no">boost/asio.hpp</includes>
    <includes local="no">limits</includes>
    <includes local="no">memory</includes>
    <includedby refid="myshmclient_8hpp" local="no">src/myshmclient.hpp</includedby>
    <includedby refid="shmclient-main_8cpp" local="no">src/shmclient-main.cpp</includedby>
    <includedby refid="shmclient_8cpp" local="no">src/shmclient.cpp</includedby>
    <incdepgraph>
      <node id="392">
        <label>osmium/io/any_input.hpp</label>
      </node>
      <node id="416">
        <label>iomanip</label>
      </node>
      <node id="422">
        <label>limits</label>
      </node>
      <node id="420">
        <label>iterator</label>
      </node>
      <node id="384">
        <label>src/shmclient.hpp</label>
        <link refid="shmclient.hpp"/>
        <childnode refid="385" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
      </node>
      <node id="396">
        <label>osmium/osm/way.hpp</label>
      </node>
      <node id="417">
        <label>car.hpp</label>
        <link refid="car_8hpp"/>
        <childnode refid="418" relation="include">
        </childnode>
        <childnode refid="403" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
      </node>
      <node id="411">
        <label>stdexcept</label>
      </node>
      <node id="389">
        <label>boost/interprocess/containers/string.hpp</label>
      </node>
      <node id="407">
        <label>string</label>
      </node>
      <node id="400">
        <label>osmium/handler/node_locations_for_ways.hpp</label>
      </node>
      <node id="404">
        <label>map</label>
      </node>
      <node id="399">
        <label>osmium/index/map/sparse_mem_map.hpp</label>
      </node>
      <node id="410">
        <label>exception</label>
      </node>
      <node id="409">
        <label>fstream</label>
      </node>
      <node id="393">
        <label>osmium/handler.hpp</label>
      </node>
      <node id="418">
        <label>osmium/osm/types.hpp</label>
      </node>
      <node id="421">
        <label>boost/asio.hpp</label>
      </node>
      <node id="388">
        <label>boost/interprocess/containers/vector.hpp</label>
      </node>
      <node id="414">
        <label>condition_variable</label>
      </node>
      <node id="402">
        <label>osmium/geom/coordinates.hpp</label>
      </node>
      <node id="397">
        <label>osmium/osm/relation.hpp</label>
      </node>
      <node id="401">
        <label>osmium/geom/haversine.hpp</label>
      </node>
      <node id="406">
        <label>vector</label>
      </node>
      <node id="391">
        <label>osmreader.hpp</label>
        <link refid="osmreader_8hpp"/>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="399" relation="include">
        </childnode>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="401" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
        <childnode refid="403" relation="include">
        </childnode>
        <childnode refid="404" relation="include">
        </childnode>
        <childnode refid="405" relation="include">
        </childnode>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="407" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
        <childnode refid="409" relation="include">
        </childnode>
        <childnode refid="410" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
      </node>
      <node id="419">
        <label>cstdlib</label>
      </node>
      <node id="386">
        <label>boost/interprocess/allocators/allocator.hpp</label>
      </node>
      <node id="403">
        <label>iostream</label>
      </node>
      <node id="398">
        <label>osmium/index/map/sparse_mem_table.hpp</label>
      </node>
      <node id="395">
        <label>osmium/osm/node.hpp</label>
      </node>
      <node id="415">
        <label>mutex</label>
      </node>
      <node id="413">
        <label>chrono</label>
      </node>
      <node id="412">
        <label>thread</label>
      </node>
      <node id="394">
        <label>osmium/visitor.hpp</label>
      </node>
      <node id="405">
        <label>set</label>
      </node>
      <node id="385">
        <label>boost/interprocess/managed_shared_memory.hpp</label>
      </node>
      <node id="408">
        <label>algorithm</label>
      </node>
      <node id="390">
        <label>smartcity.hpp</label>
        <link refid="smartcity_8hpp"/>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="412" relation="include">
        </childnode>
        <childnode refid="413" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
        <childnode refid="410" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
      </node>
      <node id="387">
        <label>boost/interprocess/containers/map.hpp</label>
      </node>
      <node id="423">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="424">
        <label>src/shmclient.hpp</label>
        <link refid="shmclient.hpp"/>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
      </node>
      <node id="429">
        <label>src/shmclient.cpp</label>
        <link refid="shmclient_8cpp"/>
      </node>
      <node id="428">
        <label>src/shmclient-main.cpp</label>
        <link refid="shmclient-main_8cpp"/>
      </node>
      <node id="427">
        <label>src/myshmclient.cpp</label>
        <link refid="myshmclient_8cpp"/>
      </node>
      <node id="426">
        <label>src/myshmclient-main.cpp</label>
        <link refid="myshmclient-main_8cpp"/>
      </node>
      <node id="425">
        <label>src/myshmclient.hpp</label>
        <link refid="myshmclient_8hpp"/>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="427" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classjustine_1_1sampleclient_1_1ShmClient" prot="public">justine::sampleclient::ShmClient</innerclass>
    <innernamespace refid="namespacejustine">justine</innernamespace>
    <innernamespace refid="namespacejustine_1_1sampleclient">justine::sampleclient</innernamespace>
    <briefdescription>
<para>Justine - this is a rapid prototype for development of Robocar City Emulator. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Norbert BÃ¡tfai <ulink url="mailto:nbatfai@gmail.com">nbatfai@gmail.com</ulink> </para></simplesect>
<simplesect kind="version"><para>0.0.10</para></simplesect>
</para><sect1 id="traffic_8cpp_1LICENSE">
<title>LICENSE</title>
<para>Copyright (C) 2014 Norbert BÃ¡tfai, <ulink url="mailto:batfai.norbert@inf.unideb.hu">batfai.norbert@inf.unideb.hu</ulink></para><para>This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</para><para>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</para><para>You should have received a copy of the GNU General Public License along with this program. If not, see <ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink>.</para></sect1>
<sect1 id="traffic_8cpp_1DESCRIPTION">
<title>DESCRIPTION</title>
<para>Robocar City Emulator and Robocar World Championship</para><para>desc </para></sect1>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>ROBOCAR_SHMCLIENT_HPP</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>ROBOCAR_SHMCLIENT_HPP</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor">#include<sp/>&lt;boost/interprocess/managed_shared_memory.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/interprocess/allocators/allocator.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/interprocess/containers/map.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/interprocess/containers/vector.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/interprocess/containers/string.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="smartcity_8hpp" kindref="compound">smartcity.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="car_8hpp" kindref="compound">car.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/asio.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">justine</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">sampleclient</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classjustine_1_1sampleclient_1_1ShmClient" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classjustine_1_1sampleclient_1_1ShmClient" kindref="compound">ShmClient</ref></highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="classjustine_1_1sampleclient_1_1ShmClient_1a7b12c596ecc920351b2c12bbfeeee7e2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7b12c596ecc920351b2c12bbfeeee7e2" kindref="member">ShmClient</ref><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>shm_segment<sp/>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>segment<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>boost::interprocess::managed_shared_memory<sp/>(</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boost::interprocess::open_only,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shm_segment<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7ccabc4f33d08ebbcd0099033d18ce21" kindref="member">shm_map</ref><sp/>=</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>segment-&gt;find&lt;justine::robocar::shm_map_Type&gt;<sp/>(</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;JustineMap&quot;</highlight><highlight class="normal"><sp/>).first;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>~<ref refid="classjustine_1_1sampleclient_1_1ShmClient" kindref="compound">ShmClient</ref>()</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7a88330a12e2a0cbfbfabae4891b3021" kindref="member">start</ref><sp/>(<sp/>boost::asio::io_service&amp;<sp/>io_service,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>port<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="classjustine_1_1sampleclient_1_1ShmClient_1aa4c2f16ec6d72aec8070c683d5b789be" refkind="member"><highlight class="normal"><sp/><sp/>osmium::unsigned_object_id_type<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classjustine_1_1sampleclient_1_1ShmClient_1aa4c2f16ec6d72aec8070c683d5b789be" kindref="member">get_random_node</ref><sp/>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>justine::robocar::shm_map_Type::iterator<sp/>iter=<ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7ccabc4f33d08ebbcd0099033d18ce21" kindref="member">shm_map</ref>-&gt;begin();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>std::advance<sp/>(<sp/>iter,<sp/>std::rand()<sp/>%<sp/><ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7ccabc4f33d08ebbcd0099033d18ce21" kindref="member">shm_map</ref>-&gt;size()<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter-&gt;first;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="classjustine_1_1sampleclient_1_1ShmClient_1a959359ddb659c32f1f65253e2359ea4f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a959359ddb659c32f1f65253e2359ea4f" kindref="member">num_edges</ref><sp/>(<sp/>osmium::unsigned_object_id_type<sp/>from<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="127"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>justine::robocar::shm_map_Type::iterator<sp/>iter=<ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7ccabc4f33d08ebbcd0099033d18ce21" kindref="member">shm_map</ref>-&gt;find<sp/>(<sp/>from<sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter-&gt;second.m_alist.size();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="classjustine_1_1sampleclient_1_1ShmClient_1a35581aba18f1c16b440dd50e84dc7715" refkind="member"><highlight class="normal"><sp/><sp/>osmium::unsigned_object_id_type<sp/><ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a35581aba18f1c16b440dd50e84dc7715" kindref="member">alist</ref><sp/>(<sp/>osmium::unsigned_object_id_type<sp/>from,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="142"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>justine::robocar::shm_map_Type::iterator<sp/>iter=<ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7ccabc4f33d08ebbcd0099033d18ce21" kindref="member">shm_map</ref>-&gt;find<sp/>(<sp/>from<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter-&gt;second.m_alist[to];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alist_inv<sp/>(<sp/>osmium::unsigned_object_id_type<sp/>from,<sp/>osmium::unsigned_object_id_type<sp/>to<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="150"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>justine::robocar::shm_map_Type::iterator<sp/>iter=<ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7ccabc4f33d08ebbcd0099033d18ce21" kindref="member">shm_map</ref>-&gt;find<sp/>(<sp/>from<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>justine::robocar::uint_vector::iterator<sp/>noderefi<sp/>=<sp/>iter-&gt;second.m_alist.begin();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noderefi!=iter-&gt;second.m_alist.end();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++noderefi<sp/>)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>to<sp/>==<sp/>*noderefi<sp/>)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>std::distance<sp/>(<sp/>iter-&gt;second.m_alist.begin(),<sp/>noderefi<sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>osmium::unsigned_object_id_type<sp/>salist<sp/>(<sp/>osmium::unsigned_object_id_type<sp/>from,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="173"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>justine::robocar::shm_map_Type::iterator<sp/>iter=<ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7ccabc4f33d08ebbcd0099033d18ce21" kindref="member">shm_map</ref>-&gt;find<sp/>(<sp/>from<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter-&gt;second.m_salist[to];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_salist<sp/>(<sp/>osmium::unsigned_object_id_type<sp/>from,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to<sp/>,<sp/>osmium::unsigned_object_id_type<sp/>value<sp/>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>justine::robocar::shm_map_Type::iterator<sp/>iter=<ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7ccabc4f33d08ebbcd0099033d18ce21" kindref="member">shm_map</ref>-&gt;find<sp/>(<sp/>from<sp/>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>iter-&gt;second.m_salist[to]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>osmium::unsigned_object_id_type<sp/>palist<sp/>(<sp/>osmium::unsigned_object_id_type<sp/>from,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>to<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="187"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>justine::robocar::shm_map_Type::iterator<sp/>iter=<ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7ccabc4f33d08ebbcd0099033d18ce21" kindref="member">shm_map</ref>-&gt;find<sp/>(<sp/>from<sp/>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter-&gt;second.m_palist[to];</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasNode<sp/>(<sp/>osmium::unsigned_object_id_type<sp/>node<sp/>)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>justine::robocar::shm_map_Type::iterator<sp/>iter=<ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7ccabc4f33d08ebbcd0099033d18ce21" kindref="member">shm_map</ref>-&gt;find<sp/>(<sp/>node<sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<sp/>(<sp/>iter<sp/>==<sp/><ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7ccabc4f33d08ebbcd0099033d18ce21" kindref="member">shm_map</ref>-&gt;end()<sp/>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dst<sp/>(<sp/>osmium::unsigned_object_id_type<sp/>n1,<sp/>osmium::unsigned_object_id_type<sp/>n2<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="203"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>justine::robocar::shm_map_Type::iterator<sp/>iter1=<ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7ccabc4f33d08ebbcd0099033d18ce21" kindref="member">shm_map</ref>-&gt;find<sp/>(<sp/>n1<sp/>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>justine::robocar::shm_map_Type::iterator<sp/>iter2=<ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7ccabc4f33d08ebbcd0099033d18ce21" kindref="member">shm_map</ref>-&gt;find<sp/>(<sp/>n2<sp/>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>osmium::geom::Coordinates<sp/>c1<sp/>{iter1-&gt;second.lon/10000000.0,<sp/>iter1-&gt;second.lat/10000000.0};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>osmium::geom::Coordinates<sp/>c2<sp/>{iter2-&gt;second.lon/10000000.0,<sp/>iter2-&gt;second.lat/10000000.0};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>osmium::geom::haversine::distance<sp/>(<sp/>c1,<sp/>c2<sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dst<sp/>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lon1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lat1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lon2,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lat2<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="216"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>osmium::geom::Coordinates<sp/>c1<sp/>{lon1,<sp/>lat1};</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>osmium::geom::Coordinates<sp/>c2<sp/>{lon2,<sp/>lat2};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>osmium::geom::haversine::distance<sp/>(<sp/>c1,<sp/>c2<sp/>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>toGPS<sp/>(<sp/>osmium::unsigned_object_id_type<sp/>from,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lo,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*la<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="226"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>justine::robocar::shm_map_Type::iterator<sp/>iter1=<ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7ccabc4f33d08ebbcd0099033d18ce21" kindref="member">shm_map</ref>-&gt;find<sp/>(<sp/>from<sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lon1<sp/>{iter1-&gt;second.lon/10000000.0},<sp/>lat1<sp/>{iter1-&gt;second.lat/10000000.0};</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>*lo<sp/>=<sp/>lon1;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>*la<sp/>=<sp/>lat1;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>toGPS<sp/>(<sp/>osmium::unsigned_object_id_type<sp/>from,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>osmium::unsigned_object_id_type<sp/>to,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>osmium::unsigned_object_id_type<sp/>step,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*lo,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*la<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="239"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>justine::robocar::shm_map_Type::iterator<sp/>iter1=<ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7ccabc4f33d08ebbcd0099033d18ce21" kindref="member">shm_map</ref>-&gt;find<sp/>(<sp/>from<sp/>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lon1<sp/>{iter1-&gt;second.lon/10000000.0},<sp/>lat1<sp/>{iter1-&gt;second.lat/10000000.0};</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>justine::robocar::shm_map_Type::iterator<sp/>iter2=<ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7ccabc4f33d08ebbcd0099033d18ce21" kindref="member">shm_map</ref>-&gt;find<sp/>(<sp/><ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a35581aba18f1c16b440dd50e84dc7715" kindref="member">alist</ref><sp/>(<sp/>from,<sp/>to<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lon2<sp/>{iter2-&gt;second.lon/10000000.0},<sp/>lat2<sp/>{iter2-&gt;second.lat/10000000.0};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>osmium::unsigned_object_id_type<sp/>maxstep<sp/>=<sp/>palist<sp/>(<sp/>from,<sp/>to<sp/>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>maxstep<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxstep<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>lat1<sp/>+=<sp/>step<sp/>*<sp/>(<sp/>(<sp/>lat2<sp/>-<sp/>lat1<sp/>)<sp/>/<sp/>maxstep<sp/>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>lon1<sp/>+=<sp/>step<sp/>*<sp/>(<sp/>(<sp/>lon2<sp/>-<sp/>lon1<sp/>)<sp/>/<sp/>maxstep<sp/>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>*lo<sp/>=<sp/>lon1;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>*la<sp/>=<sp/>lat1;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="classjustine_1_1sampleclient_1_1ShmClient_1a7ccabc4f33d08ebbcd0099033d18ce21" refkind="member"><highlight class="normal"><sp/><sp/>boost::interprocess::offset_ptr&lt;justine::robocar::shm_map_Type&gt;<sp/><ref refid="classjustine_1_1sampleclient_1_1ShmClient_1a7ccabc4f33d08ebbcd0099033d18ce21" kindref="member">shm_map</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>boost::interprocess::managed_shared_memory<sp/>*segment;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>foo<sp/>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>init<sp/>(<sp/>boost::asio::ip::tcp::socket<sp/>&amp;<sp/>socket<sp/>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>gangsters<sp/>(<sp/>boost::asio::ip::tcp::socket<sp/>&amp;<sp/>socket,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pos<sp/>(<sp/>boost::asio::ip::tcp::socket<sp/>&amp;<sp/>socket,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>car<sp/>(<sp/>boost::asio::ip::tcp::socket<sp/>&amp;<sp/>socket,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>*f,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>*t,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">*<sp/>s<sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>route1<sp/>(<sp/>boost::asio::ip::tcp::socket<sp/>&amp;<sp/>socket,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>route2<sp/>(<sp/>boost::asio::ip::tcp::socket<sp/>&amp;<sp/>socket,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal">};</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>justine::sampleclient::</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>ROBOCAR_SHMCLIENT_HPP</highlight></codeline>
<codeline lineno="290"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/pisti/robocar/Robocar/justine/rcemu/src/shmclient.hpp"/>
  </compounddef>
</doxygen>
